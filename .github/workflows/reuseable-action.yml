name: Terraform Template

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: "Deployment environment. Valid options: dev or prod"
    secrets:
      service_account:
        required: true
      oidc_provider:
        required: true

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: OpenID connect
        id: auth
        uses: google-github-actions/auth@v0
        with:
          create_credentials_file: 'true'
          workload_identity_provider: ${{ secrets.oidc_provider }}
          service_account: ${{ secrets.service_account}}

      - name: 'Setup gcloud SDK'
        uses: google-github-actions/setup-gcloud@v0

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check

      - name: Terraform Init
        id: init
        run: |
          cd ${{ inputs.environment }}
          terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          cd ${{ inputs.environment }}
          terraform plan -no-color -var-file=terraform.tfvars
      
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


